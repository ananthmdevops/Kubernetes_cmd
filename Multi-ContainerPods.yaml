cat<< EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: mc1
spec:
  volumes:
  - name: html
    emptyDir: {}
  containers:
  - name: 1st
    image: nginx
    volumeMounts:
    - name: html
      mountPath: /usr/share/nginx/html
  - name: 2nd
    image: debian
    volumeMounts:
    - name: html
      mountPath: /html
    command: ["/bin/sh", "-c"]
    args:
      - while true; do
          date >> /html/index.html;
          sleep 1;
        done
EOF

========================================
Steps:

1) volume named html. Its type is emptyDir:

It means that the volume is first created when a Pod is assigned to a node and exists as long as the Pod is running on that node. 
As the name says, it is initially empty. 

2) The 1st container runs nginx server and has the shared volume mounted to the directory /usr/share/nginx/html. 

3) The 2nd container uses the Debian image and has the shared volume mounted to the directory /html. 
Every second, the 2nd container adds the current date and time into the index.html file, which is in the shared volume. 


Demo:
====== 
kubectl exec mc1 -c 1st -- /bin/ls  /usr/share/nginx/html/
kubectl exec mc1 -c 2nd -- /bin/ls  /html/
 
kubectl exec mc1 -c 1st -- /bin/cat /usr/share/nginx/html/index.html
kubectl exec mc1 -c 2nd -- /bin/cat /html/index.html

